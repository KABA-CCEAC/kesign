- var path = '../'
- var nav = '.documentation'
!!! 5
html(lang="en")
  head
    include ../includes/layout/head

  body(data-spy="scroll", data-target=".sidebar")
    include ../includes/layout/header
          
    include ../includes/layout/content

      .page
        .section
          .row-fluid
            .span8
              .widget
                .widget-header
                  h3 Choose Application Type

                .widget-content
                  .section
                    p This section will help you to decide for the right application type and appropriate interface style.
                    object(width="480", height="360")
                      param(name="movie", value="http://www.youtube.com/v/Ns-JS4amlTc?version=3&amp;hl=en_US")
                      param(name="allowFullScreen", value="true")
                      param(name="allowscriptaccess", value="always")
                      embed(src="http://www.youtube.com/v/Ns-JS4amlTc?version=3&amp;hl=en_US", type="application/x-shockwave-flash", width="480", height="360", allowscriptaccess="always", allowfullscreen="true")

                    p If you got any uncertainties feel free to contact the Kaba User Interface Design Officer for guideance.
                    

          .row-fluid.app-types
            .span6   
              .app-type
                .app-type-title
                  h4 Responsive Website
                .app-type-description
                  .row-fluid
                    .span12
                      img.polaroid.span10.offset1(src="#{path}public/img/appTypes_web.jpg")
                  
                  :markdown
                    Doing a responsive website/app is in most cases the best and cost efficient solution. This 
                    solution brings 'good-enough' results in most cases for __desktop and tablet usage__. The usability on 
                    a smartphone, depending on the content, might be insufficent.

                    You might consider not doing a webapplikation if you have special requirements:

                  ul.large
                    li access to device sensors
                    li usability of website would be distracting
                    li usage is primary for smartphone

                  .row-fluid
                    .span6
                      ul.app-type-pros
                        li do only once for all devices
                        li lower cost than native apps
                        li branding is possible
                    .span6
                      ul.app-type-cons
                        li restricted access to device sensors
                .app-type-interface
                  h6 choose the interface style of kesign

            .span6   
              .app-type
                .app-type-title
                  h4 Mobilefirst Web / Hybrid Application
                .app-type-description
                  .row-fluid
                    .span12
                      img.polaroid.span10.offset1(src="#{path}public/img/appTypes_mobilefirst.jpg")
                  
                  :markdown
                    Doing a mobile-first website/app or hybrid app (eg. phonegap) is a cost efficient solution for doing a 
                    solution primary focused for _smartphones_. The usability is significant raised on the smaller screensize 
                    provided by this kind of device. Tablets would profit from a separate solution using the possibilities 
                    of the larger screen size.

                    You might consider not doing a Mobilefirst Web / Hybrid Application if you have special requirements:

                  ul.large
                    li access to device sensors not yet supported by platform builder
                    li usability of mobilefirst web or hybrid applikation would be still distracting

                  .row-fluid
                    .span6
                      ul.app-type-pros
                        li do only once for all mobile devices
                        li lower cost than native apps
                        li branding is possible
                        li hybrid: access to most device sensors
                    .span6
                      ul.app-type-cons
                        li costs higer than pure responsive website
                .app-type-interface
                  h6 choose the interface style of kesign-mobile

          .row-fluid.app-types
            .span6
              .app-type
                .app-type-title
                  h4 Native Application
                .app-type-description
                  .row-fluid
                    .span12
                      img.polaroid.span10.offset1(src="#{path}public/img/appTypes_native.jpg")

                  :markdown
                    If an webapplikation is not sufficent. You should consider doing an application to the devices 
                    native style.

                    You might consider not doing a native application if you have special requirements:

                  ul.large
                    li usability would be improved by custom application

                  .row-fluid
                    .span6
                      ul.app-type-pros
                        li seemless to the specific devices
                        li full access to device sensors
                    .span6
                      ul.app-type-cons
                        li restricted branding
                        li higher cost than webapplikation
                        li specific development environment
                        li deployment via store
                .app-type-interface.yellow
                  h6 
                   | choose the style of the given device 
                   small (iOS, Android, Win8,...)

            .span6
              .app-type
                .app-type-title
                  h4 Custom Application
                .app-type-description
                  .row-fluid
                    .span12
                      img.polaroid.span10.offset1(src="#{path}public/img/appTypes_custom.jpg")

                  :markdown
                    If an native application is not sufficent. You should consider doing an application to the devices 
                    native style.

                    If ever possible try to reuse an existing kaba design style (eg. b-inspired).

                    You might consider choosing a custom application if:

                  ul.large
                    li for a kaba device with display (try reuse of b-inspired style)
                    li the usability wins (eg. user is used to terminal usage, reuse of terminal style might be better than native style experience)

                  .row-fluid
                    .span6
                      ul.app-type-pros
                        li seemless to the specific devices
                        li full access to device sensors
                    .span6
                      ul.app-type-cons
                        li custom style will raise costs
                        li higher cost than native applikation
                        li specific development environment
                        li deployment via store

                .app-type-interface.red
                  h6 
                   | reuse a kaba design style or create a special 
                   small (b-inspired)
      
    include ../includes/layout/footer
    
    include ../includes/layout/endscripts

    script(type='text/javascript')
      //$(document).ready(function() {
      $(window).load(function() {
        $('.app-type-description').equalHeights();
        $('.app-type-interface').equalHeights();
      });

